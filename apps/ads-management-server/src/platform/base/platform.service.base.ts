/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Platform as PrismaPlatform,
  AdGroup as PrismaAdGroup,
} from "@prisma/client";

export class PlatformServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PlatformCountArgs, "select">): Promise<number> {
    return this.prisma.platform.count(args);
  }

  async platforms<T extends Prisma.PlatformFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PlatformFindManyArgs>
  ): Promise<PrismaPlatform[]> {
    return this.prisma.platform.findMany<Prisma.PlatformFindManyArgs>(args);
  }
  async platform<T extends Prisma.PlatformFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PlatformFindUniqueArgs>
  ): Promise<PrismaPlatform | null> {
    return this.prisma.platform.findUnique(args);
  }
  async createPlatform<T extends Prisma.PlatformCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PlatformCreateArgs>
  ): Promise<PrismaPlatform> {
    return this.prisma.platform.create<T>(args);
  }
  async updatePlatform<T extends Prisma.PlatformUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PlatformUpdateArgs>
  ): Promise<PrismaPlatform> {
    return this.prisma.platform.update<T>(args);
  }
  async deletePlatform<T extends Prisma.PlatformDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PlatformDeleteArgs>
  ): Promise<PrismaPlatform> {
    return this.prisma.platform.delete(args);
  }

  async findAdGroups(
    parentId: string,
    args: Prisma.AdGroupFindManyArgs
  ): Promise<PrismaAdGroup[]> {
    return this.prisma.platform
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .adGroups(args);
  }
}
